@str.0 = constant [4 x i8] c"%d\0A\00"
@str.1 = constant [4 x i8] c"%d\0A\00"
@str.2 = constant [4 x i8] c"%f\0A\00"

declare i32 @printf(i8*, ...)

define void @t(i32 %a) {
; <label>:0
	%1 = alloca i32
	store i32 %a, i32* %1
	%2 = load i32, i32* %1
	%3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.0, i64 0, i64 0), i32 %2)
	ret void
}

define void @tt(i64 %a) {
; <label>:0
	%1 = alloca i64
	store i64 %a, i64* %1
	%2 = load i64, i64* %1
	%3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.1, i64 0, i64 0), i64 %2)
	ret void
}

define void @ff(float %float322) {
; <label>:0
	%1 = alloca float
	store float %float322, float* %1
	%2 = load float, float* %1
	%3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.2, i64 0, i64 0), float %2)
	ret void
}

define void @main() {
; <label>:0
	%1 = trunc i32 23 to i8
	%2 = trunc i32 234 to i16
	%3 = alloca i32
	store i32 235, i32* %3
	%4 = sext i32 2356 to i64
	%5 = alloca float
	store float 0x4028AC0840000000, float* %5
	%6 = alloca float
	store float 0x4028AC0840000000, float* %6
	%7 = alloca i32
	store i32 1236, i32* %7
	%8 = load i32, i32* %7
	%9 = trunc i32 %8 to i8
	%10 = alloca i8
	store i8 %9, i8* %10
	%11 = load i8, i8* %10
	%12 = sext i8 %11 to i32
	call void @t(i32 %12)
	%13 = load i32, i32* %7
	%14 = sext i32 %13 to i64
	call void @tt(i64 %14)
	%15 = load i32, i32* %7
	%16 = sitofp i32 %15 to float
	call void @ff(float %16)
	%17 = load float, float* %5
	%18 = fptosi float %17 to i32
	call void @t(i32 %18)
	ret void
}
